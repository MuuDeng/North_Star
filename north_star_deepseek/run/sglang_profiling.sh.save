#!/bin/bash
#PBS -P 50000128
#PBS -l walltime=00:30:00
#PBS -l select=2:ncpus=112:ngpus=8:mpiprocs=8:mem=1880gb
#PBS -j oe
#PBS -m abe

module load cuda

# ========================
# 1️⃣ ตั้งค่าพื้นฐาน distributed
# ========================
MASTER_ADDR=$(head -n 1 $PBS_NODEFILE)
MASTER_PORT=$(( 20000 + RANDOM % 10000 ))   # ✅ port ไม่ซ้ำทุกครั้ง
export MASTER_ADDR MASTER_PORT
export DIST_INIT_ADDR=$MASTER_ADDR
export DIST_INIT_PORT=$MASTER_PORT

# ========================
# 2️⃣ Network & CUDA env
# ========================
export NCCL_SOCKET_IFNAME=ib0      # ← ปรับให้ตรงกับ interface จริงใน cluster
export GLOO_SOCKET_IFNAME=ib0
export NCCL_DEBUG=INFO
export CUDA_DEVICE_ORDER=PCI_BUS_ID
export CUDA_VISIBLE_DEVICES=0,1,2,3,4,5,6,7

# ========================
# 3️⃣ Path สำหรับ profiling
# ========================
NSYS_BIN=/home/users/industry/ai-hpc/apacsc34/nsight-systems-2025.5.1/bin/nsys
OUTDIR=${HOME}/scratch/nattanon/profiling/nsys_reports
mkdir -p "$OUTDIR"

# ========================
# 4️⃣ mpirun distributed
# ========================
time /usr/mpi/gcc/openmpi-4.1.7a1/bin/mpirun \
  -hostfile ${PBS_NODEFILE} \
  -map-by ppr:8:node:PE=14 -bind-to core --report-bindings \
  -tag-output -output-filename ${HOME}/scratch/tanathep/run/sglang.${PBS_JOBID} \
  -x PATH -x NCCL_DEBUG -x NCCL_SOCKET_IFNAME -x GLOO_SOCKET_IFNAME \
  -x MASTER_ADDR -x MASTER_PORT -x DIST_INIT_ADDR -x DIST_INIT_PORT \
  -x CUDA_VISIBLE_DEVICES -x CUDA_DEVICE_ORDER \
  bash -lc '
    RANK=${OMPI_COMM_WORLD_RANK}
    LOCAL_RANK=${OMPI_COMM_WORLD_LOCAL_RANK}
    NODE_RANK=$(( RANK / ${OMPI_COMM_WORLD_LOCAL_SIZE:-8} ))
    WORLD_SIZE=${OMPI_COMM_WORLD_SIZE}

    echo "[DBG] host=$(hostname) rank=$RANK local=$LOCAL_RANK node=$NODE_RANK world=$WORLD_SIZE init=$MASTER_ADDR:$MASTER_PORT" >&2

    PYTHON=${HOME}/scratch/nattanon/py312/bin/python3
    MODEL=${HOME}/scratch/model/DeepSeek-R1
    DATA=${HOME}/scratch/dataset/ShareGPT_V3_unfiltered_cleaned_split.json

    # รัน profiling เฉพาะ local rank 0 ต่อ node
    if [ "$LOCAL_RANK" -eq 0 ]; then
      echo "[INFO] Rank $RANK (Node $NODE_RANK, Local $LOCAL_RANK) profiling with Nsight."
      $NSYS_BIN profile \
        --output=$OUTDIR/sglang_profile.${PBS_JOBID}.node${NODE_RANK}.rank${RANK} \
        --trace=cuda,nvtx,mpi,osrt \
        --capture-range=nvtx --capture-range-end=stop \
        --sample=none --force-overwrite=true \
        $PYTHON -m sglang.bench_offline_throughput \
          --model-path $MODEL \
          --dataset-path $DATA \
          --num-prompts 2000 --load-format dummy --seed 2025 --dtype bfloat16 \
          --tp 16 --nnodes 2 --trust-remote-code \
          --dist-init-addr ${MASTER_ADDR}:${MASTER_PORT} \
          --node-rank ${NODE_RANK}
    else
      echo "[INFO] Rank $RANK (Node $NODE_RANK, Local $LOCAL_RANK) baseline run."
      $PYTHON -m sglang.bench_offline_throughput \
        --model-path $MODEL \
        --dataset-path $DATA \
        --num-prompts 2000 --load-format dummy --seed 2025 --dtype bfloat16 \
        --tp 16 --nnodes 2 --trust-remote-code \
        --dist-init-addr ${MASTER_ADDR}:${MASTER_PORT} \
        --node-rank ${NODE_RANK}
    fi
  ' 2>&1 | tee ${HOME}/run/stdout.sglang.${PBS_JOBID}
